security :
  enable_authenticator_manager : true
  password_hashers :
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface : 'auto'
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers :
    users :
      entity : { class : App\Entity\User, property : email }
    usersId :
      entity : { class : App\Entity\User, property : id }
  firewalls :
    dev :
      pattern : ^/(_(profiler|wdt)|css|images|js)/
      security : false

    api_health :
      pattern : ^/api/health$
      security : false
      stateless : true

    api_info :
      pattern : ^/api/info$
      security : false
      stateless : true

    main :
      pattern : ^/
      lazy : true
      provider : users
      context : boardworks
      switch_user :
        provider : usersId
        role : CAN_SWITCH_USER
      entry_point : App\Security\Application\LoginFormAuthenticator
      custom_authenticators :
        - App\Security\Application\LoginFormAuthenticator
        - App\Security\Application\PasswordResetHashAuthenticator
      logout :
        path : app_login_logout
        target : app_index
        invalidate_session : true
      form_login :
        login_path : app_login_login
        check_path : app_login_login
        default_target_path : app_2fa
        csrf_parameter : token
        enable_csrf : true
      two_factor :
        auth_form_path : 2fa_front_login    # The route name you have used in the routes.yaml
        check_path : 2fa_front_login_check  # The route name you have used in the routes.yaml
        enable_csrf : true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control :
    #General Access Control Rules
    - { path : ^/login, roles : PUBLIC_ACCESS }
    - { path : ^/sso_callback, roles : PUBLIC_ACCESS }
    - { path : ^/logout, roles : PUBLIC_ACCESS }
    - { path : ^/password-reset-hash, roles : PUBLIC_ACCESS }
    - { path : ^/reset-password, roles : PUBLIC_ACCESS }
    - { path : ^/2fa, roles : IS_AUTHENTICATED_2FA_IN_PROGRESS }
    - { path : ^/index, roles : PUBLIC_ACCESS }
    - { path : ^/$, roles : PUBLIC_ACCESS }
    - { path : ^/, roles : ROLE_USER }
